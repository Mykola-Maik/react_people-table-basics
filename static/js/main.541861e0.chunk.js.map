{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleItem/PeopleItem.tsx","pages/PeoplePage/PeoplePage.tsx","helpers.ts","pages/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["Navbar","className","role","isActive","cn","to","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","name","sex","PeopleItem","useParams","isSelectedPerson","born","died","mother","father","motherName","fatherName","PeoplePage","useState","people","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","peopleList","catch","finally","visiblePeople","peopleMap","Map","forEach","set","map","get","preparePeople","length","NotFoundPage","router","createHashRouter","path","element","errorElement","children","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.541861e0.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          })}\n          to=\"people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person?: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({\n  person = { slug: '', name: '', sex: '' },\n}) => {\n  const {\n    slug,\n    name,\n    sex,\n  } = person;\n\n  return (\n    <Link\n      to={`${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PeopleItem: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  const isSelectedPerson = person.slug === slug;\n\n  const {\n    sex,\n    name,\n    born,\n    died,\n    mother,\n    father,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': isSelectedPerson,\n      })}\n    >\n      <td>\n        <Link\n          className={cn({\n            'has-text-danger': sex === 'f',\n          })}\n          to={`${person.slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother && (\n          <PersonLink person={person.mother} />\n        )}\n\n        {!mother && `${motherName || '-'}`}\n      </td>\n      <td>\n        {father && (\n          <PersonLink person={person.father} />\n        )}\n\n        {!father && `${fatherName || '-'}`}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleItem } from '../../components/PeopleItem/PeopleItem';\nimport { preparePeople } from '../../helpers';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleList => setPeople(peopleList))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visiblePeople = preparePeople(people);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {visiblePeople.map(person => (\n                  <PeopleItem\n                    person={person}\n                    key={person.slug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from './types';\n\nexport const preparePeople = (people: Person[]) => {\n  const peopleMap = new Map();\n\n  people.forEach(person => {\n    peopleMap.set(person.name, person);\n  });\n\n  const preparedPeople = people.map(person => {\n    const mother = peopleMap.get(person.motherName);\n    const father = peopleMap.get(person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  return preparedPeople;\n};\n","import React from 'react';\nimport { Navbar } from '../../components/Navbar/Navbar';\n\nexport const NotFoundPage: React.FC = () => (\n  <>\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  </>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  // HashRouter as Router,\n  RouterProvider,\n  // createBrowserRouter,\n  createHashRouter,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\n\nconst router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFoundPage />,\n    children: [\n      {\n        index: true,\n        element: <HomePage />,\n      },\n      {\n        path: '/people',\n        element: <PeoplePage />,\n        children: [\n          {\n            path: ':slug',\n            element: <PeoplePage />,\n          },\n        ],\n      },\n      {\n        path: 'home',\n        element: <Navigate to=\"/\" replace />,\n      },\n    ],\n  },\n]);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <RouterProvider router={router} />,\n  );\n"],"sourceRoot":""}